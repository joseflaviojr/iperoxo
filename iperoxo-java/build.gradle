//------------------------------------------------------

apply plugin: "java"
apply plugin: "eclipse"

//------------------------------------------------------

String nome = "Ipe-roxo"
String descricao = "Ipê-roxo: Modelo de aplicação de Copaíba."

group = "com.joseflavio"
archivesBaseName = "iperoxo"
version = "1.0-A1"

//------------------------------------------------------

float javaVersao = 1.8
String codificacao = "ISO-8859-1"

sourceCompatibility = javaVersao
compileJava.options.encoding = codificacao

sourceSets {
    main.java.srcDirs = ["fonte"]
    main.resources.srcDirs = ["recurso"]
}

//------------------------------------------------------

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir:"biblioteca", include:["*.jar"])
    compile "com.joseflavio:copaiba:1.0-A1"
    compile "org.apache.tomcat:tomcat-catalina:8.0.35"
    compile "org.apache.tomee:javaee-api:7.0"
    compile "org.apache.geronimo.specs:geronimo-osgi-locator:1.1"
    compile "org.eclipse.persistence:eclipselink:2.6.2"
    compile "org.postgresql:postgresql:9.4.1207"
    compile "org.apache.commons:commons-dbcp2:2.1.1"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.commons:commons-io:1.3.2"
    compile "org.apache.commons:commons-email:1.4"
    compile "org.apache.logging.log4j:log4j-api:2.5"
    compile "org.apache.logging.log4j:log4j-core:2.5"
    testCompile "junit:junit:4.12"
}

//------------------------------------------------------

jar {
    manifest {
        attributes "Implementation-Title": nome,
                   "Implementation-Version": version,
                   "Main-Class": "com.joseflavio.iperoxo.IpeRoxo",
                   "Class-Path": configurations.compile.collect{ it.getName() }.join(" ")
    }
}

//------------------------------------------------------

task distDep(type: Copy, dependsOn: [jar]) {
    into "$buildDir/dist"
    from "$projectDir/dist"
    from "$buildDir/libs/" + archivesBaseName + "-" + version + ".jar"
    from configurations.compile
}

task distExe << {
    def destino = new File( "build/exe" )
    destino.mkdirs()
    def comando = new File( "build/exe/" + archivesBaseName + ".sh" )
    def nomeJar = archivesBaseName + "-" + version + ".jar"
    comando << "#!/bin/bash\n\n"
    comando << "java -server "
    comando << "-jar $nomeJar \"\$@\"\n"
}

task dist(type: Copy, dependsOn: [distDep, distExe]) {
    into "$buildDir/dist"
    from "$buildDir/exe"
    fileMode 0755
}

build.dependsOn dist

//------------------------------------------------------

eclipse {
    project {
        name = archivesBaseName
        comment = descricao
    }
    jdt {
        sourceCompatibility = javaVersao
        targetCompatibility = javaVersao
    }
    classpath {
        defaultOutputDir = file("binario")
        file {
            beforeMerged {
                classpath -> classpath.entries.removeAll { entry -> entry.kind == "output" }
            }
        }
    }
}

//------------------------------------------------------